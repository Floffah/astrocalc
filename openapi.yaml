openapi: 3.1.1
info:
  title: AstroCalc
  description: Astronomy & astrology microservice for working out planetary positions & birth charts
  version: 0.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  contact:
    name: AstroCalc Contributors
    url: https://github.com/floffah/astrocalc
servers:
  - url: "https://astrocalc-api.onrender.com"
security: [ ]
components:
  schemas:
    ZodiacSign:
      type: string
      enum:
        - Aries
        - Taurus
        - Gemini
        - Cancer
        - Leo
        - Virgo
        - Libra
        - Scorpio
        - Sagittarius
        - Capricorn
        - Aquarius
        - Pisces
      examples:
        - "Sagittarius"
    Planet:
      type: string
      enum:
        - Sun
        - Moon
        - Mercury
        - Venus
        - Mars
        - Jupiter
        - Saturn
        - Uranus
        - Neptune
        - Pluto
        - Ascendant
        - Midheaven
        - Descendant
        - Nadir
        - Chiron
        - Lilith
        - True North Node
        - True South Node
      examples:
        - "Sun"
    BirthChartSign:
      type: object
      properties:
        value:
          $ref: "#/components/schemas/ZodiacSign"
        degree:
          type: number
          examples:
            - 265.5819247317688
        cuspWarning:
          oneOf:
            - $ref: "#/components/schemas/ZodiacSign"
            - type: "null"
    ZodiacPosition:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
          maximum: 11
        name:
          $ref: "#/components/schemas/ZodiacSign"
        lord:
          type: object
          properties:
            id:
              type: integer
              minimum: 0
              maximum: 11
            name:
              $ref: "#/components/schemas/ZodiacSign"
    HouseCusp:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
          maximum: 11
        number:
          type: integer
          minimum: 1
          maximum: 12
        cusp:
          type: object
          properties:
            longitude:
              type: number
              examples:
                - 246.5334031282507
            degree:
              type: number
              minimum: 0
              maximum: 30
              examples:
                - 16.5334031282507
            zodiac:
              $ref: "#/components/schemas/ZodiacPosition"
    PlanetPosition:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
          maximum: 11
        name:
          $ref: "#/components/schemas/Planet"
        longitude:
          type: number
          examples:
            - 246.5334031282507
        is_retrograde:
          type: boolean
          examples:
            - false
        degree:
          type: number
          minimum: 0
          maximum: 30
          examples:
            - 16.5334031282507
        zodiac:
          $ref: "#/components/schemas/ZodiacPosition"
    AnglePosition:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
          maximum: 11
        name:
          $ref: "#/components/schemas/Planet"
        longitude:
          type: number
          examples:
            - 246.5334031282507
        is_retrograde:
          type: boolean
          examples:
            - false
        degree:
          type: number
          minimum: 0
          maximum: 30
          examples:
            - 16.5334031282507
        house_number:
          type: integer
          minimum: 1
          maximum: 12
        zodiac:
          $ref: "#/components/schemas/ZodiacPosition"

    AspectType:
      type: string
      enum:
        - Conjunction
        - Opposition
        - Trine
        - Square
        - Sextile
        - Quincunx
        - Semi Sextile
        - Semi Square
        - Sesquiquadrate
        - Quintile
        - Bi Quintile
        - Septile
        - Bi Septile
        - Tri Septile
        - Novile
        - Quincunx
        - Parallel
        - Contraparallel

    Aspect:
        type: object
        properties:
          planet_one:
            type: object
            properties:
              id:
                type: integer
              name:
                $ref: "#/components/schemas/Planet"
          planet_two:
            type: object
            properties:
              id:
                type: integer
              name:
                $ref: "#/components/schemas/Planet"
          aspect:
            type: object
            properties:
              id:
                type: integer
              name:
                $ref: "#/components/schemas/AspectType"
          orb:
            type: number

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          examples:
            - "Missing required parameters"
            - "Invalid date"
            - "Invalid location"
paths:
  /birth-chart:
    get:
      operationId: calculateBirthChart
      summary: Calculate a birth chart
      description: |
        This endpoint calculates a birth chart for a given date, time, and location.
        It will give information such as: signs, houses, and aspects of the planets.
      parameters:
        - name: year
          in: query
          description: The year of birth
          required: true
          schema:
            type: integer
            minimum: 1900
            maximum: 2100
        - name: month
          in: query
          description: The month of birth. NOT zero-indexed.
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
        - name: day
          in: query
          description: The day of birth
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 31
        - name: hour
          in: query
          description: The hour of birth
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 23
        - name: minute
          in: query
          description: The minute of birth
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 59
        - name: latitude
          in: query
          description: The latitude of birth
          required: true
          schema:
            type: number
            minimum: -90
            maximum: 90
        - name: longitude
          in: query
          description: The longitude of birth
          required: true
          schema:
            type: number
            minimum: -180
            maximum: 180
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  signs:
                    type: object
                    properties:
                      sun:
                        $ref: "#/components/schemas/BirthChartSign"
                      moon:
                        $ref: "#/components/schemas/BirthChartSign"
                      ascendant:
                        $ref: "#/components/schemas/BirthChartSign"
                  houses:
                    type: array
                    items:
                      $ref: "#/components/schemas/HouseCusp"
                  planets:
                    type: array
                    items:
                      $ref: "#/components/schemas/PlanetPosition"
                  angles:
                    type: array
                    items:
                      $ref: "#/components/schemas/AnglePosition"
                  aspects:
                    type: array
                    items:
                      $ref: "#/components/schemas/Aspect"
                  declinations:
                    type: array
                    items:
                      $ref: "#/components/schemas/Aspect"

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"